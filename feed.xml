<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[blog]]></title><description><![CDATA[blog]]></description><link>https://colinrcummings.github.io/blog</link><generator>RSS for Node</generator><lastBuildDate>Tue, 03 Oct 2017 19:44:41 GMT</lastBuildDate><atom:link href="https://colinrcummings.github.io/feed.xml" rel="self" type="application/rss+xml"/><item><title><![CDATA[Managing environment workflows with gulp.js]]></title><description><![CDATA[<p>Over the years, I've used a few different combinations of frameworks, libraries and tools, some of which come with environment workflows out-of-the-box and others that do not. With the <a href="https://trends.google.com/trends/explore?date=all&q=%2Fm%2F0505cl,%2Fm%2F06y_qx,%2Fm%2F0bbxf89" target="_blank">rising popularity of Node.js</a>, the need to roll one's own environment workflows is also on the rise, as is the number of resources with which to do so. I recently give a presentation about this topic at one of the software development Meetups I attend; below is an overview of the presentation, the lion's share of which was a live demo.</p>
<p><a role="button" class="btn btn-default" href="http://colinrcummings.github.io/meetup-gulp" target="_blank">View Presentation</a></p>
<hr>
<h2 id="background"><a href="#background" class="phenomic-HeadingAnchor">#</a>Background</h2>
<p>I like writing code; I don't like performing repetitive tasks like manipulating files, migrating folders, running scripts, <i>et cetera</i>. Accordingly, I make optimizing develop, build and deploy workflows across development, test and production environments a priority in every project. Inevitably, this is a tradeoff between <a href="https://twitter.com/phillip_webb/status/705909774001377280?lang=en" target="_blank"> magic and boilerplate</a>.</p>
<p>When I was getting started with development, I used <a href="http://rubyonrails.org/" target="_blank">Ruby On Rails</a>, which is preconfigured with pretty good, albeit magic-laden, develop and build workflows for development and production environments that are powered by its <a href="http://guides.rubyonrails.org/asset_pipeline.html" target="_blank">Asset Pipeline</a>. Additionally, <a href="https://www.heroku.com/" target="_blank">Heroku</a> offers a nice <a href="https://devcenter.heroku.com/articles/getting-started-with-rails4#deploy-your-application-to-heroku" target="_blank">Rails deploy workflow</a> for test and production environments. If you've worked with Rails like this before, then you know that it's great... until it isn't.</p>
<div class="grid">
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>The good</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/asset_pipeline_good.jpg" alt="Welcome aboard. You're riding Ruby on Rails! (meme)"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>The bad</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/asset_pipeline_bad.jpg" alt="I don't always deploy Rails to Heroku, but when I do, I break the Asset Pipeline. (meme)"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>The ugly</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/asset_pipeline_ugly.jpg" alt="Asset Pipeline! (meme)"/>
      </div>
    </div>
  </div>
</div>
<p>While I still use Rails in some existing projects (including <a href="https://www.peakbucket.com/" target="_blank">PeakBucket</a>), I've come to prefer <a href="https://nodejs.org/" target="_blank">Node.js</a> when starting new ones. Node leaves configuration almost entirely up to the developer, but with freedom comes responsibilityâ€”and often boilerplate. Some tools, like <a href="https://github.com/facebookincubator/create-react-app" target="_blank">Create React App</a>, provide preconfigured (<i>i.e.</i> boilerplate-free) develop and build workflows for development and production environments with the option to "eject" and customize the configuration at any time. For more complex applications, however, you often need more control; for me, this is where <a href="https://gulpjs.com/" target="_blank">gulp.js</a> comes into play.</p>
<p>With over 3 million downloads a month, gulp needs little introduction. While it's not the only tool of its kind, nor is it as widely used as <a href="https://webpack.github.io/" target="_blank">webpack</a> (with over 8 million downloads a month), its flexibility, strong ecosystem and interoperability with other tools (including webpack) make it my choice for managing environment workflows in more complex applications.</p>
<hr>
<h2 id="example"><a href="#example" class="phenomic-HeadingAnchor">#</a>Example</h2>
<p>At work, I maintain a Node project that's an <a href="https://expressjs.com/" target="_blank">Express</a> application comprised of multiple single-page <a href="https://reactjs.org/" target="_blank">React</a>  applications. Configured like this, Express handles database connections, view/web service routes and user authentication server-side, while React handles user interactions client-side. Here are the workflows I've configured for this application:</p>
<h3 id="develop"><a href="#develop" class="phenomic-HeadingAnchor">#</a>Develop</h3>
<p>Optimized for developer experience, the develop workflow is tuned to minimize wait time and manual tasks in order to maximize code quality and output in the development environment. On startup, it copies static files, transpiles SASS files and compiles JS(X) files into the public directory. It uses <a href="https://github.com/remy/nodemon" target="_blank">nodemon</a> for a runtime, which automatically restarts the server when watched files change, and uses individual database connections per web service request to avoid acquiring additional connections with each restart. Because webpack bundles the view scripts, it takes advantage of <a href=" https://webpack.github.io/docs/hot-module-replacement.html" target="_blank">Hot Module Replacement</a> (including <a href="https://gaearon.github.io/react-hot-loader/" target="_blank">React Hot Loader</a>) in addition to <a href="https://github.com/webpack-contrib/webpack-bundle-analyzer" target="_blank">Webpack Bundle Analyzer</a>.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/dev.jpg" alt="Develop workflow (console screenshot)"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="build"><a href="#build" class="phenomic-HeadingAnchor">#</a>Build</h3>
<p>One of 12 items on <a href="https://www.joelonsoftware.com/2000/08/09/the-joel-test-12-steps-to-better-code/" target="_blank">The Joel Test</a>, making a build in one step, for use in either the test or production environment, is what this workflow is all about. Prior to making a build, it runs a unit test suite, which covers all aspects of the application (including database connections, web service calls, business logic and user authentication/interaction). In addition to copying/transpiling/compiling minified public assets, it also copies all of the other files required for running the application (models, views, controllers, routes, <i>et cetera</i>) into a build directory.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/build.jpg" alt="Build workflow (console screenshot)"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="deploy"><a href="#deploy" class="phenomic-HeadingAnchor">#</a>Deploy</h3>
<p>One additional piece of complexity with this application is that it's deployed to a Windows Server hosted on a VPN. My goal in creating this workflow was to replicate the ease of <code>$ git push heroku master</code>, which I've enjoyed with other applications. It's split into two commands: one run locally and another run on the server, which leaves the flexibility to deploy to multiple environments server-side.</p>
<p>Locally, the deploy workflow runs the build workflow, zips the build directory and coppies the zipped build directory to the server.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/deploy-local.jpg" alt="Deploy workflow locally (console screenshot)"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>On the server, the build can be deployed to either the test or production environment:</p>
<p>In the test environment, the deploy workflow on the server unzips the zipped build directory, migrates build files and updates node modules. The test environment runtime is started manually as a process attached to the console (<i>i.e.</i> <code>$ npm start</code>).</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/deploy-server-test.jpg" alt="Test deploy workflow on the server (console screenshot)"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>In the production environment, the deploy workflow on the server unzips the zipped build directory, performs a database backup, stops the runtime daemon process, migrates build files, updates node modules and starts the runtime daemon process. The production environment runtime is a native Windows service courtesy of the <a href="https://github.com/coreybutler/node-windows/" target="_blank">node-windows</a> module.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/managing_environment_workflows_with_gulp/deploy-server-prod.jpg" alt="Production deploy workflow on the server (console screenshot)"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<hr>
<h2 id="feedback"><a href="#feedback" class="phenomic-HeadingAnchor">#</a>Feedback</h2>
<p>Have questions, comments or suggestions? Reach out to me on Twitter (<a href="https://twitter.com/colinrcummings">@colinrcummings</a>).</p>
<p>â€” Colin</p>
]]></description><link>https://colinrcummings.github.io/posts/managing-environment-workflows-with-gulp/</link><guid isPermaLink="true">https://colinrcummings.github.io/posts/managing-environment-workflows-with-gulp/</guid><pubDate>Tue, 03 Oct 2017 04:00:00 GMT</pubDate></item><item><title><![CDATA[Introduction to React.js]]></title><description><![CDATA[<p>I've been using <a href="https://facebook.github.io/react/" target="_blank">React</a> for a few years now. If you read my <a href="/blog/posts/a-wedding-website/">previous post</a>, then you know that it's my go-to library for creating user interfaces (including <a href="https://github.com/colinrcummings/blog">this blog</a>). I was recently asked to give a presentation on React at one of the software development Meetups I attend. I opted to introduce the library, walk through a couple of core concepts (with examples), do a few ad hoc demos and then leave the audience with some additional concepts, resources and tools. Below is an overview of <a href="http://formidable.com/open-source/spectacle/" target="_blank">Spectacle</a>, the library I used to create the presentation.</p>
<p><a role="button" class="btn btn-default" href="http://colinrcummings.github.io/meetup-react" target="_blank">View Presentation</a></p>
<hr>
<h2 id="spectacle"><a href="#spectacle" class="phenomic-HeadingAnchor">#</a>Spectacle</h2>
<p>Spectacle bills itself as "A React.js based library for creating sleek presentations". It's <em>awesome</em>. Being able to use components to compose a presentation about React felt right from the start. Out of the box, the library provides <a href="https://github.com/FormidableLabs/spectacle#tag-api" target="_blank">tags</a> for core slideshow objects you're probably already familiar with from another <a href="https://www.youtube.com/watch?v=uNjxe8ShM-8" target="_blank">presentation program</a> that shall not be named. Two things really set Spectacle apart from <a href="https://github.com/search?l=JavaScript&o=desc&q=presentation&s=stars&type=Repositories&utf8=%E2%9C%93" target="_blank">other web-based presentation tools</a>:</p>
<h3 id="code-slides"><a href="#code-slides" class="phenomic-HeadingAnchor">#</a>Code Slides</h3>
<p>Embedding code in a presentation isn't new, but with the <a href="https://github.com/thejameskyle/spectacle-code-slide" target="_blank">spectacle-code-slide</a> extension I was able to step through my example code with syntax highlighting and contextual notes.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/introduction_to_react/code_slide.gif" alt="Code slide"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="embedded-examples"><a href="#embedded-examples" class="phenomic-HeadingAnchor">#</a>Embedded Examples</h3>
<p>Because the entire Spectacle presentation is a React component, I was able to embed my example components into my slides and interact with them live.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <img class="img-rounded" src="../../assets/images/posts/introduction_to_react/interactive_example.gif" alt="Interactive example"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<hr>
<h2 id="feedback"><a href="#feedback" class="phenomic-HeadingAnchor">#</a>Feedback</h2>
<p>Have questions, comments or suggestions? Reach out to me on Twitter (<a href="https://twitter.com/colinrcummings">@colinrcummings</a>).</p>
<p>â€” Colin</p>
]]></description><link>https://colinrcummings.github.io/posts/introduction-to-react/</link><guid isPermaLink="true">https://colinrcummings.github.io/posts/introduction-to-react/</guid><pubDate>Thu, 18 May 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[A Wedding Website]]></title><description><![CDATA[<p>My sister's getting married. During a discussion about how to handle RSVPs for the big day, I floated the option of doing it online. This was a welcome idea; however, it meant she needed a website. The question, then, was to buy or build.</p>
<p>While exploring available options, my suspicions were confirmed: wedding websites are a cottage industry. There's a hodgepodge of do-it-yourself platforms out there promising a "customized look and feel", but the enter fiancÃ© name <em>here</em>, and upload photo of you and partner <em>there</em>, routine almost invariably results in a ready-made feel (to say nothing of typically poor user experience on smaller devices). Additionally, one-size-fits-all approaches to online RSVPs tend to entail configuration-heavy setups, busy admin interfaces and less-than-seamless form integration on the guest-facing page.</p>
<p>Ultimately, I opted for build. Below is an overview of what turned out to be a really fun project. I've included links to a few resources that I found particularly helpful along the way.</p>
<p><a role="button" class="btn btn-default" href="https://brynne-and-don.herokuapp.com/" target="_blank" >Visit Website</a></p>
<p><strong>Update:</strong> Now that the wedding has passed, the site's on a free dyno, which may take a few seconds to spin up. <span class="small text-muted">(Fri May 5 2017)</span></p>
<hr>
<h2 id="technology"><a href="#technology" class="phenomic-HeadingAnchor">#</a>Technology</h2>
<p><strong>tl;dr:</strong> I used the <a href="https://medium.com/@jkchuynh829/the-nerp-stack-29402b6a4355" target="_blank" >NERP stack</a> with a webpack build, including hot reloading in development, as well as Nodemailer and Bootsrap 4.</p>
<h3 id="back-end"><a href="#back-end" class="phenomic-HeadingAnchor">#</a>Back End</h3>
<p>Node with Express is my go-to server setup these days. I've used a couple different build tool combinations in other Node-based projects (Grunt, gulp and/or webpack), but this was the first time I let webpack handle everythingâ€”JS(X), (S)CSS, HTML, <a href="https://paradite.com/2016/10/25/font-awesome-angular-2-webpack/" target="_blank">icons</a>, <a href="https://shellmonger.com/2016/01/22/working-with-fonts-with-webpack/" target="_blank">fonts</a> and <a href="https://survivejs.com/webpack/loading-assets/loading-images/" target="_blank">images</a>. It can capably and quickly do it all, and with <a href="https://medium.com/@LopezTech/a-web-application-journey-part-3-webpack-dev-server-and-related-improvements-abd5060bd3fc" target="_blank">a little extra configuration</a> you get hot reloading for React components in development, which is <em>awesome</em>. I spun up a Postgres database on Heroku to store RSVPs, which is also where the server runs, and used <a href="http://mherman.org/blog/2016/03/13/designing-a-restful-api-with-node-and-postgres/#.WLHfR1UrLIV" target="_blank">pg-promise</a> to execute CRUD actions. I also used <a target="_blank" href="http://javascript.tutorialhorizon.com/2015/07/02/send-email-node-js-express/">Nodemailer</a> to send guest confirmation and admin notification emails via Gmail, which took some extra configuration as it requires <a href="http://masashi-k.blogspot.com/2013/06/sending-mail-with-gmail-using-xoauth2.html" target="_blank">XOAuth2</a>. Lastly, the admin RSVP management page and its associated API routes are protected using Passport local authentication.</p>
<h3 id="front-end"><a href="#front-end" class="phenomic-HeadingAnchor">#</a>Front End</h3>
<p>In conjunction with React, I used an alpha release of <a href="https://www.artembutusov.com/webpack-customizable-bootstrap-4-x-scss/" target="_blank">Bootstrap 4</a> for the framework. I've been using version 3 for a few years now, and the short lifecycle of this project gave me an opportunity to test drive some of the <a href="https://v4-alpha.getbootstrap.com/migration/" target="_blank">changes, additions and removals</a> coming in version 4. I also made use of Animate, Moment, Underscore, D3 and Crossfilter in different places.</p>
<hr>
<h2 id="guest-splash-page"><a href="#guest-splash-page" class="phenomic-HeadingAnchor">#</a>Guest Splash Page</h2>
<p><strong>tl;dr:</strong> The guest-facing splash page is comprised of 6 sections containing React components; how some components render depends on the current date.</p>
<h3 id="intro"><a href="#intro" class="phenomic-HeadingAnchor">#</a>Intro</h3>
<p>This component renders a responsive full screen background image with animated <a href="https://css-tricks.com/design-considerations-text-images/" target="_blank">overlay text</a>, a bouncing chevron icon that triggers some <a href="https://gist.github.com/joshcanhelp/a3a669df80898d4097a1e2c01dea52c1" target="_blank">jQuery-free scroll animation</a> and parallax scrolling on larger devices.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/intro.jpg" alt="Intro component"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="actions--thank-you"><a href="#actions--thank-you" class="phenomic-HeadingAnchor">#</a>Actions / Thank You</h3>
<p>One of the biggest benefits of building user interfaces with React is that it makes conditional rendering really easy. This section renders components differently based on the current date's relationship to the wedding and RSVP dates.</p>
<p>Before the wedding date, this section renders a component with two action buttons: a hook for RSVPs and a link to the Registry.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/actions.jpg" alt="Actions component"/>
  </div>
   <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>As the RSVP date approaches/passes, the RSVP action button renders accordingly.</p>
<div class="grid">
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Open</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/actions/rsvps_open.jpg" alt="RSVPs open"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Closing Soon</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/actions/rsvps_closing.jpg" alt="RSVPs closing soon"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Closed</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/actions/rsvps_closed.jpg" alt="RSVPs closed"/>
      </div>
    </div>
  </div>
</div>
<p>RSVPs are submitted through a series of modal screens launched from the RSVP action button.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Search</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/modal/search.jpg" alt="RSVP search"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Form</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/modal/form.jpg" alt="RSVP form"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Result</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/modal/result.jpg" alt="RSVP result"/>
      </div>
    </div>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>If the guest provides an email address in the RSVP form, then they receive a confirmation email.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/emails/guest_confirmation.jpg" alt="RSVPs open"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>The admin receives a notification email each time an RSVP is submitted.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/rsvps/emails/admin_notification.jpg" alt="RSVPs closing soon"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>After the wedding date, this section renders a component with a thank you note so the page isn't anachronistic.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
    <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/thank_you.jpg" alt="Thank You component"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="bios"><a href="#bios" class="phenomic-HeadingAnchor">#</a>Bios</h3>
<p>This component renders bride and groom bios using Bootstrap 4's new <a href="https://v4-alpha.getbootstrap.com/components/card/" target="_blank">Card component</a>.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/bios.jpg" alt="Bios component"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="events"><a href="#events" class="phenomic-HeadingAnchor">#</a>Events</h3>
<p>This component is based on a <a href="https://codyhouse.co/gem/vertical-timeline/" target="_blank">responsive vertical timeline template</a>. I added rotating <a href="http://www.flaticon.com/packs/wedding-and-love" target="_blank">icons</a>, a happening now indicator and directions (in a modal) using the <a href="https://developers.google.com/maps/documentation/embed/guide" target="_blank">Google Maps Embedded API</a> (with <a href="https://developers.google.com/maps/documentation/javascript/geolocation" target="_blank">geolocation</a>).</p>
<div class="grid">
  <div class="col-6-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Timeline</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/events.jpg" alt="Events component"/>
      </div>
    </div>
  </div>
  <div class="col-6-12">
    <div class="text-center">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Directions</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/directions.jpg" alt="Directions modal"/>
      </div>
    </div>
  </div>
</div>
<h3 id="photos"><a href="#photos" class="phenomic-HeadingAnchor">#</a>Photos</h3>
<p>This component renders a Bootstrap 4 <a href="https://v4-alpha.getbootstrap.com/components/carousel/" target="_blank">Carousel component</a>.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/photos.jpg" alt="Photos component"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="outro"><a href="#outro" class="phenomic-HeadingAnchor">#</a>Outro</h3>
<p>Before the wedding date, this component renders a count down over a responsive full screen background image with parallax scrolling on larger devices. After the wedding date, the count down becomes a count up.</p>
<div class="grid">
  <div class="col-6-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Count Down</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/outro_count_down.jpg" alt="Outro count down"/>
      </div>
    </div>
  </div>
  <div class="col-6-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Count Up</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/index/sections/outro_count_up.jpg" alt="Outro count up"/>
      </div>
    </div>
  </div>
</div>
<hr>
<h2 id="admin-rsvp-management-page"><a href="#admin-rsvp-management-page" class="phenomic-HeadingAnchor">#</a>Admin RSVP Management Page</h2>
<p><strong>tl;dr:</strong> The admin-facing RSVP management page has a header with add, search and filter icons, in addition to two tabs: one to review RSVPs at a high level and another to review, edit and delete individual RSVPs.</p>
<h3 id="header"><a href="#header" class="phenomic-HeadingAnchor">#</a>Header</h3>
<p>The header has icons for adding a new RSVP (in a modal), searching RSVPs by name (using <a href="https://github.com/ericgio/react-bootstrap-typeahead" target="_blank">react-bootstrap-typeahead</a>) and filtering RSVPs by status.</p>
<div class="grid">
  <div class="col-4-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Add</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/actions/add.jpg" alt="Add RSVP"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Search</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/actions/search.jpg" alt="Search RSVPs"/>
      </div>
    </div>
  </div>
  <div class="col-4-12">
    <div class="text-center" style="margin-top: 5px;">
      <div style="display: inline-block; max-width: 100%;">
        <div class="text-left">
          <span class="small text-muted">
            <em>Filter</em>
          </span>
        </div>
        <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/actions/filter.jpg" alt="Filter RSVPs"/>
      </div>
    </div>
  </div>
</div>
<h3 id="summary-tab"><a href="#summary-tab" class="phenomic-HeadingAnchor">#</a>Summary Tab</h3>
<p>The summary tab renders two donut charts: one summarizing RSVPs and another summarizing attendance.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/tabs/summary.jpg" alt="RSVP summary"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<h3 id="details-tab"><a href="#details-tab" class="phenomic-HeadingAnchor">#</a>Details Tab</h3>
<p>The details tab renders a sortable table with a sticky header and export to Excel functionality. Each RSVP row has an edit and delete icon.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/tabs/details.jpg" alt="RSVP details"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>RSVPs are edited inline with validations for each attribute.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/actions/edit.jpg" alt="RSVP edit"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<p>RSVPs are deleted by way of modal confirmation.</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/rsvps/actions/delete.jpg" alt="RSVP delete"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<hr>
<h2 id="performance"><a href="#performance" class="phenomic-HeadingAnchor">#</a>Performance</h2>
<p>From Google's <a href="https://testmysite.thinkwithgoogle.com/" target="_blank">PageSpeed Insights</a>:</p>
<div class="grid">
  <div class="col-2-12 hide-on-mobile"></div>
  <div class="col-8-12">
     <img class="img-rounded" src="../../assets/images/posts/a_wedding_website/page_speed.jpg" alt="PageSpeed Insights"/>
  </div>
  <div class="col-2-12 hide-on-mobile"></div>
</div>
<hr>
<h2 id="feedback"><a href="#feedback" class="phenomic-HeadingAnchor">#</a>Feedback</h2>
<p>Have questions, comments or suggestions? Reach out to me on Twitter (<a href="https://twitter.com/colinrcummings">@colinrcummings</a>).</p>
<p>â€” Colin</p>
]]></description><link>https://colinrcummings.github.io/posts/a-wedding-website/</link><guid isPermaLink="true">https://colinrcummings.github.io/posts/a-wedding-website/</guid><pubDate>Sun, 26 Feb 2017 00:00:00 GMT</pubDate></item></channel></rss>